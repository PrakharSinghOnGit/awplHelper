// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Leader {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String
  awplId      String   @unique
  awplPass    String
  
  // Team management
  teamMembers TeamMember[]
  
  // Billing
  subscriptionStatus String @default("TRIAL") // TRIAL, ACTIVE, SUSPENDED
  billingCycle       String @default("WEEKLY") // WEEKLY, MONTHLY
  lastPayment        DateTime?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("leaders")
}

model Member {
  id          String   @id @default(cuid())
  awplId      String   @unique
  awplPass    String
  validPasses String[] // Array of backup passwords
  
  // Status tracking
  status      String   @default("ACTIVE") // ACTIVE, ERROR, SUSPENDED
  lastDataFetch DateTime?
  errorMessage String?
  
  // Data from AWPL website
  levelData   Json?
  chequeData  Json?
  targetData  Json?
  
  // Relationships
  leaders     TeamMember[]
  dataLogs    DataFetchLog[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("members")
}

// Many-to-many relationship table
model TeamMember {
  id       String @id @default(cuid())
  
  leader   Leader @relation(fields: [leaderId], references: [id], onDelete: Cascade)
  leaderId String
  
  member   Member @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId String
  
  // When leader added this member
  addedAt  DateTime @default(now())
  
  @@unique([leaderId, memberId]) // Prevent duplicate relationships
  @@map("team_members")
}

model DataFetchLog {
  id        String   @id @default(cuid())
  memberId  String
  member    Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)
  
  success   Boolean
  error     String?
  dataType  String   // "LEVEL", "CHEQUE", "TARGET"
  
  createdAt DateTime @default(now())
  
  @@map("data_fetch_logs")
}
